<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on NooOTe</title>
    <link>http://localhost:1313/tags/golang/</link>
    <description>Recent content in Golang on NooOTe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2024 D7MeKz</copyright>
    <lastBuildDate>Wed, 22 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Entgo - Ent ORM</title>
      <link>http://localhost:1313/posts/entgo-1/</link>
      <pubDate>Wed, 22 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/entgo-1/</guid>
      <description>ORM 선택 # Go의 경우에는 JAVA와 달리 대표적인 ORM 프레임워크가 없어, 개발자가 직접 선택해서 사용해야 한다.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/posts/entgo-1/featured_go.png" />
    </item>
    
    <item>
      <title>Todopoint 서버코드 개선기 - 1. 공동 에러 처리하기</title>
      <link>http://localhost:1313/project/todopoint/gin-fix1-error/</link>
      <pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/project/todopoint/gin-fix1-error/</guid>
      <description>Go를 활용하여 직접 2개의 서비스를 만들고 나니, 구현할때 지나쳤던 에러들이 큰 눈덩이로 변해서 덮쳐왔다.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/project/todopoint/gin-fix1-error/featured_go.png" />
    </item>
    
    <item>
      <title>Gin 예외처리 - 2. 커스텀 예외처리</title>
      <link>http://localhost:1313/posts/gin-error-handling2/</link>
      <pubDate>Wed, 10 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/gin-error-handling2/</guid>
      <description>이전에는 Gin이 어떻게 예외 처리를 하는지 언급했다.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/posts/gin-error-handling2/featured_go.png" />
    </item>
    
    <item>
      <title>Gin 예외처리 - 1. Go Error</title>
      <link>http://localhost:1313/posts/gin-error-handling1/</link>
      <pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/gin-error-handling1/</guid>
      <description>Go와 예외처리 # Go에서의 예외처리 # Go에서는 함수에서 반환된 에러 객체(error)로 처리한다.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/posts/gin-error-handling1/featured_go.png" />
    </item>
    
  </channel>
</rss>
