<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NooOTe</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on NooOTe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2024 D7MeKz</copyright>
    <lastBuildDate>Wed, 22 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Entgo - Ent ORM</title>
      <link>http://localhost:1313/posts/entgo-1/</link>
      <pubDate>Wed, 22 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/entgo-1/</guid>
      <description>ORM 선택 # Go의 경우에는 JAVA와 달리 대표적인 ORM 프레임워크가 없어, 개발자가 직접 선택해서 사용해야 한다.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/posts/entgo-1/featured_go.png" />
    </item>
    
    <item>
      <title>Todopoint 서버코드 개선기 - 1. 공동 에러 처리하기</title>
      <link>http://localhost:1313/project/todopoint/gin-fix1-error/</link>
      <pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/project/todopoint/gin-fix1-error/</guid>
      <description>Go를 활용하여 직접 2개의 서비스를 만들고 나니, 구현할때 지나쳤던 에러들이 큰 눈덩이로 변해서 덮쳐왔다.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/project/todopoint/gin-fix1-error/featured_go.png" />
    </item>
    
    <item>
      <title>Flutter - Flutter 프로젝트 구조</title>
      <link>http://localhost:1313/project/todopoint/flutter-project-architecture/</link>
      <pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/project/todopoint/flutter-project-architecture/</guid>
      <description>MVVM 아키텍쳐 # Model, ViewModel, View의 줄임말 Model : 애플리케이션의 데이터 및 비즈니스 로직 View Model : View에 표시되는 데이터를 관리한다.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/project/todopoint/flutter-project-architecture/featured_flutter.png" />
    </item>
    
    <item>
      <title>AWS - EKS란 무엇인가</title>
      <link>http://localhost:1313/posts/what-is-eks/</link>
      <pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/what-is-eks/</guid>
      <description>EKS # Amazon Web Services(AWS)에 Kubernetes 컨트롤 플레인을 설치, 운영 및 유지 관리할 필요가 없는 관리형 서비스이다1.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/posts/what-is-eks/featured.png" />
    </item>
    
    <item>
      <title>AWS - IAM 그리고 Profile</title>
      <link>http://localhost:1313/posts/iam-and-profile/</link>
      <pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/iam-and-profile/</guid>
      <description>Introduction # Terraform 코드를 분석하고 있었다.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/posts/iam-and-profile/featured.png" />
    </item>
    
    <item>
      <title>Gin 예외처리 - 2. 커스텀 예외처리</title>
      <link>http://localhost:1313/posts/gin-error-handling2/</link>
      <pubDate>Wed, 10 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/gin-error-handling2/</guid>
      <description>이전에는 Gin이 어떻게 예외 처리를 하는지 언급했다.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/posts/gin-error-handling2/featured_go.png" />
    </item>
    
    <item>
      <title>Gin 예외처리 - 1. Go Error</title>
      <link>http://localhost:1313/posts/gin-error-handling1/</link>
      <pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/gin-error-handling1/</guid>
      <description>Go와 예외처리 # Go에서의 예외처리 # Go에서는 함수에서 반환된 에러 객체(error)로 처리한다.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/posts/gin-error-handling1/featured_go.png" />
    </item>
    
    <item>
      <title>Terraform 기초 맛보기 - 1. 기본 문법 익히기</title>
      <link>http://localhost:1313/posts/basic-terraform1/</link>
      <pubDate>Thu, 25 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/basic-terraform1/</guid>
      <description>Terraform 이란 # HashiCorp에서 오픈소스로 개발중인, 클라우드 및 온프로미스 인프라를 코드로 관리할 수 있는 코드이다.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/posts/basic-terraform1/featured.png" />
    </item>
    
  </channel>
</rss>
